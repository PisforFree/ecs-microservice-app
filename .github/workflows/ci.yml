name: App CI  build, push, publish digest

on:
  pull_request:
    branches: [dev, main]
    paths:
      - "app/**"
      - "Dockerfile"
      - ".github/workflows/ci.yml"
  push:
    branches: [dev, main]
    paths:
      - "app/**"
      - "Dockerfile"
      - ".github/workflows/ci.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION:         ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  ECR_REPO:           ${{ secrets.ECR_REPO }}

  # Mini-Step 6.3 (auto-PR to deploy repo)
  DEPLOY_REPO:   "PisforFree/ecs-microservice-deploy"
  DEPLOY_BRANCH: "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (app repo)
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: app-ci

      - name: Get AWS Account ID
        id: acct
        run: |
          echo "id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image URI
        id: image
        run: |
          IMAGE_URI="${{ steps.acct.outputs.id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}"
          echo "uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      # Build + push only on push events (PRs build/scan later without pushing)
      - name: Build and push image (tag = commit SHA)
        if: github.event_name == 'push'
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t "${{ steps.image.outputs.uri }}:${{ github.sha }}" \
            --push \
            .

      # Resolve the digest from ECR for the just-pushed tag
      - name: Resolve image digest from ECR
        if: github.event_name == 'push'
        id: digest
        run: |
          DIGEST=$(aws ecr describe-images \
            --repository-name "${{ env.ECR_REPO }}" \
            --image-ids imageTag="${{ github.sha }}" \
            --query 'imageDetails[0].imageDigest' \
            --output text)
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "IMAGE: ${{ steps.image.outputs.uri }}@${DIGEST}"

      # Write digest to a file
      - name: Write digest file
        if: github.event_name == 'push'
        run: |
          echo "${{ steps.digest.outputs.digest }}" > digest.txt

      # Upload digest artifact
      - name: Upload digest artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: image-digest
          path: digest.txt

      # Echo outputs for quick copy/paste
      - name: Summary
        if: github.event_name == 'push'
        run: |
          echo "IMAGE_URI=${{ steps.image.outputs.uri }}"
          echo "IMAGE_DIGEST=${{ steps.digest.outputs.digest }}"

      - name: Probe PAT access to deploy repo
        if: github.event_name == 'push'
        run: |
          code=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.DEPLOY_REPO_TOKEN }}" \
            https://api.github.com/repos/PisforFree/ecs-microservice-deploy)
          echo "HTTP $code from GitHub API"
          test "$code" = "200"


      # ---- Mini-Step 6.3: Open PR to deploy repo with new digest ----
      - name: Checkout deploy repo (target branch) into subfolder
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          repository: PisforFree/ecs-microservice-deploy
          ref: main
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: deploy-repo

      - name: Prepare PR env
        if: github.event_name == 'push'
        run: |
          echo "NEW_DIGEST=${{ steps.digest.outputs.digest }}" >> $GITHUB_ENV

      - name: Update app.auto.tfvars with new digest
        if: github.event_name == 'push'
        working-directory: deploy-repo
        shell: bash
        run: |
          set -euo pipefail
          FILE="environments/dev/app.auto.tfvars"
          test -f "$FILE" || { echo "Missing $FILE in deploy repo"; exit 1; }
          sed -i -E "s#^image_digest\\s*=\\s*\"sha256:[^\"]+\"#image_digest = \"${NEW_DIGEST}\"#g" "$FILE"
          echo "Updated line in $FILE:"; grep -n "^image_digest" "$FILE"

      - name: Create Pull Request in deploy repo
        if: github.event_name == 'push'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: deploy-repo
          title: "chore(dev): pin ECS image to ${{ env.NEW_DIGEST }}"
          body: |
            Automated PR from app CI.
            - Source repo: ${{ github.repository }}
            - Commit: ${{ github.sha }}
            - Digest: `${{ env.NEW_DIGEST }}`
          branch: "chore/digest-${{ github.sha }}-to-${{ env.DEPLOY_BRANCH }}"
          base: "${{ env.DEPLOY_BRANCH }}"
          commit-message: "chore: update dev image_digest to ${{ env.NEW_DIGEST }}"
